{"version":3,"file":"static/js/893.192ecf49.chunk.js","mappings":"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","sources":["constants.ts","types/admin.ts","components/Admin/Mail.tsx","components/Admin/AdminSidebar.tsx","components/Admin/AdminAccordian.tsx","components/Admin/Resume.tsx","components/Admin/About.tsx","routes/Admin.tsx","services/api.ts","services/auth.js","utils/authHeader.ts"],"sourcesContent":["export const SUCCESS_CODE = 200;\nexport const UNAUTHORIZED = 401;\nexport const FORBIDDEN = 403;\nexport const SERVER_ERROR = 500;\n\nexport const INVALID_TOKEN = 'INVALID_TOKEN';\nexport const VALID_TOKEN = 'VALID_TOKEN';\n\nexport const emailRegExp =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const API_URL = process.env.REACT_APP_API_URL;\nexport const GITHUB_API = 'https://api.github.com';\n","export enum AdminMenuOption {\n  ABOUT = 'about',\n  MAIL = 'mail',\n  RESUME = 'resume',\n  SETTINGS = 'settings',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Table, TableHeader, TableBody, TableRow, TableCell } from 'grommet';\nimport { useMediaQuery } from 'react-responsive';\nimport api from '../../services/api';\nimport { Mail } from '../../types/mail';\n\ntype MailMessageProps = Mail;\ntype MailProps = {};\n\nconst MailMessage: React.FC<MailMessageProps> = ({\n  firstName,\n  lastName,\n  email,\n  message,\n}) => {\n  const isMobile = useMediaQuery({ maxWidth: 1224 });\n  const name = `${firstName} ${lastName}`;\n  return (\n    <TableRow>\n      {isMobile ? (\n        <TableCell scope={'col'} border={'bottom'}>\n          {name} &lt;{email}&gt;\n          <br />\n          <br />\n          {message}\n        </TableCell>\n      ) : (\n        <>\n          <TableCell scope={'col'} border={'bottom'}>\n            {name}\n          </TableCell>\n          <TableCell scope={'col'} border={'bottom'}>\n            {email}\n          </TableCell>\n          <TableCell scope={'col'} border={'bottom'}>\n            {message}\n          </TableCell>\n        </>\n      )}\n    </TableRow>\n  );\n};\n\nconst Mails: React.FC<MailProps> = () => {\n  const isMobile = useMediaQuery({ maxWidth: 1224 });\n  const [mail, setMail] = useState<Mail[]>([]);\n  const [mailLoading, setMailLoading] = useState(true);\n\n  const loadMail = async () => {\n    try {\n      const response = await api.mail.get();\n      setMail(response.mails);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setMailLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadMail();\n  }, []);\n\n  return !mailLoading ? (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          {isMobile ? (\n            <TableCell scope={'col'} border={'bottom'}>\n              <strong>Messages</strong>\n            </TableCell>\n          ) : (\n            <>\n              <TableCell scope={'col'} border={'bottom'}>\n                <strong>Name</strong>\n              </TableCell>\n              <TableCell scope={'col'} border={'bottom'}>\n                <strong>Email</strong>\n              </TableCell>\n              <TableCell scope={'col'} border={'bottom'}>\n                <strong>Message</strong>\n              </TableCell>\n            </>\n          )}\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {mail.map((value, index) => {\n          return <MailMessage key={index} {...value} />;\n        })}\n      </TableBody>\n    </Table>\n  ) : null;\n};\n\nexport default Mails;\n","import React from 'react';\nimport { Sidebar, Box, Avatar, Text, Button, Nav } from 'grommet';\nimport {\n  User,\n  Logout,\n  MailOption,\n  SettingsOption,\n  Notes,\n  Article,\n} from 'grommet-icons';\nimport { AdminMenuOption } from '../../types/admin';\n\ntype Props = {\n  option: (menuOption: AdminMenuOption) => void;\n};\n\nconst AdminSidebar: React.FC<Props> = ({ option }) => {\n  return (\n    <Sidebar\n      responsive={false}\n      width={'300px'}\n      round={{ corner: 'right', size: 'small' }}\n      background={'#0984e3'}\n      elevation={'xlarge'}\n      pad={{ left: 'medium', right: 'large', top: 'medium' }}\n      header={\n        <Box\n          width={'100%'}\n          direction={'row'}\n          gap={'small'}\n          justify={'center'}\n          align={'center'}\n          wrap={true}>\n          <Avatar background={'#DADADA'} round={'full'}>\n            <User size={'medium'} />\n          </Avatar>\n          <Text textAlign={'center'} margin={{ vertical: 'small' }}>\n            Adrian Leung\n          </Text>\n        </Box>\n      }\n      footer={\n        <Button\n          plain\n          alignSelf={'start'}\n          icon={<Logout size={'medium'} style={{ padding: '10px' }} />}\n          href={'/logout'}\n          label={'Logout'}\n        />\n      }>\n      <Box width={'100%'}>\n        <Nav gap={'large'}>\n          <Box>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<Article />}\n              label={'About'}\n              onClick={e => {\n                option(AdminMenuOption.ABOUT);\n              }}\n            />\n          </Box>\n          <Box>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<MailOption />}\n              label={'Mail'}\n              onClick={e => {\n                option(AdminMenuOption.MAIL);\n              }}\n            />\n          </Box>\n          <Box>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<Notes />}\n              label={'Resume'}\n              onClick={e => {\n                option(AdminMenuOption.RESUME);\n              }}\n            />\n          </Box>\n          <Box>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<SettingsOption />}\n              label={'Settings'}\n              onClick={e => {\n                option(AdminMenuOption.SETTINGS);\n              }}\n            />\n          </Box>\n        </Nav>\n      </Box>\n    </Sidebar>\n  );\n};\n\nexport default AdminSidebar;\n","import React from 'react';\nimport { Accordion, AccordionPanel, Avatar, Box, Text, Button } from 'grommet';\nimport {\n  Article,\n  User,\n  MailOption,\n  SettingsOption,\n  Logout,\n  Notes,\n} from 'grommet-icons';\nimport { AdminMenuOption } from '../../types/admin';\n\ntype Props = {\n  option: (menuOption: AdminMenuOption) => void;\n};\n\nconst AdminAccordian: React.FC<Props> = ({ option }) => {\n  return (\n    <Box fill={'horizontal'}>\n      <Accordion\n        animate={true}\n        round={{ corner: 'bottom', size: 'medium' }}\n        style={{ zIndex: 999, position: 'fixed', width: '100%' }}>\n        <AccordionPanel label={'Admin'}>\n          <Box\n            pad={{ horizontal: 'medium' }}\n            background={'#0984e3'}\n            height={'xsmall'}\n            gap={'medium'}\n            direction={'row'}\n            justify={'start'}\n            align={'center'}\n            wrap={true}>\n            <Avatar background={'#DADADA'} round={'full'}>\n              <User size={'medium'} />\n            </Avatar>\n            <Text textAlign={'center'} margin={{ vertical: 'small' }}>\n              Adrian Leung\n            </Text>\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<Article />}\n              label={'About'}\n              onClick={e => {\n                option(AdminMenuOption.ABOUT);\n              }}\n            />\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<MailOption />}\n              label={'Mail'}\n              onClick={e => {\n                option(AdminMenuOption.MAIL);\n              }}\n            />\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<Notes />}\n              label={'Resume'}\n              onClick={e => {\n                option(AdminMenuOption.RESUME);\n              }}\n            />\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<SettingsOption />}\n              label={'Settings'}\n              onClick={e => {\n                option(AdminMenuOption.SETTINGS);\n              }}\n            />\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            round={{ corner: 'bottom', size: 'medium' }}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<Logout size={'medium'} />}\n              href={'/logout'}\n              label={'Logout'}\n            />\n          </Box>\n        </AccordionPanel>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default AdminAccordian;\n","import React, { useState } from 'react';\nimport { Text, FileInput, Button } from 'grommet';\nimport api from '../../services/api';\n\ntype Props = {};\n\nconst Resume: React.FC<Props> = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>();\n  return (\n    <>\n      <Text>Upload Resume:</Text>\n      <FileInput\n        name={'resume'}\n        multiple={false}\n        renderFile={file => {\n          return <Text>{file.name}</Text>;\n        }}\n        onChange={e => {\n          setSelectedFile(e?.target?.files && e.target.files[0]);\n        }}\n      />\n      <Button\n        onClick={async () => {\n          try {\n            if (!selectedFile) {\n              alert('No file selected');\n              return;\n            }\n            const response = await api.resume.update(selectedFile);\n            if (response === 'OK') {\n              alert('Resume updated');\n            } else {\n              alert('Could not update resume');\n            }\n          } catch (err) {\n            console.error(err);\n            alert('Could not update resume');\n          }\n        }}>\n        Submit\n      </Button>\n    </>\n  );\n};\n\nexport default Resume;\n","import React, { useEffect, useState } from 'react';\nimport { Text, Button, TextArea } from 'grommet';\nimport api from '../../services/api';\n\ntype Props = {};\n\nconst About: React.FC<Props> = () => {\n  const [aboutSection, setAboutSection] = useState('');\n\n  const loadAbout = async () => {\n    try {\n      const response = await api.about.get();\n      setAboutSection(response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    loadAbout();\n  }, []);\n\n  return (\n    <>\n      <Text>Update About Section:</Text>\n      <TextArea\n        size={'small'}\n        fill={true}\n        value={aboutSection}\n        onChange={e => setAboutSection(e.target.value)}\n      />\n      <Button\n        onClick={async () => {\n          try {\n            const response = await api.about.update(aboutSection);\n            if (response === 'OK') {\n              alert('About section updated');\n            } else {\n              alert('Could not update about section');\n            }\n          } catch (err) {\n            console.error(err);\n            alert('Could not update about section');\n          }\n        }}>\n        Submit\n      </Button>\n    </>\n  );\n};\n\nexport default About;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Heading } from 'grommet';\nimport { Navigate } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\nimport Mail from '../components/Admin/Mail';\nimport AdminSidebar from '../components/Admin/AdminSidebar';\nimport AdminAccordian from '../components/Admin/AdminAccordian';\nimport { checkAuth } from '../services/auth';\nimport { INVALID_TOKEN } from '../constants';\nimport Resume from '../components/Admin/Resume';\nimport About from '../components/Admin/About';\nimport { AdminMenuOption } from '../types/admin';\n\ntype Props = {};\n\nconst Admin: React.FC<Props> = () => {\n  const [redirect, setRedirect] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 1224 });\n  const [option, setOption] = useState<AdminMenuOption>(AdminMenuOption.ABOUT);\n\n  const Content = () => {\n    switch (option) {\n      case AdminMenuOption.ABOUT:\n        return <About />;\n      case AdminMenuOption.MAIL:\n        return <Mail />;\n      case AdminMenuOption.RESUME:\n        return <Resume />;\n      case AdminMenuOption.SETTINGS:\n        return <></>;\n      default:\n        return <></>;\n    }\n  };\n\n  useEffect(() => {\n    const validate = async () => {\n      if ((await checkAuth()) === INVALID_TOKEN) {\n        setRedirect(true);\n      }\n    };\n    validate();\n  }, []);\n\n  return redirect ? (\n    <Navigate to={'/login'} />\n  ) : (\n    <Box\n      width={'100vw'}\n      height={'100vh'}\n      gap={isMobile ? 'medium' : 'small'}\n      direction={isMobile ? 'column' : 'row'}>\n      {isMobile ? (\n        <AdminAccordian option={(value: AdminMenuOption) => setOption(value)} />\n      ) : (\n        <AdminSidebar option={(value: AdminMenuOption) => setOption(value)} />\n      )}\n\n      <Box\n        width={'100%'}\n        height={'100%'}\n        pad={'small'}\n        margin={{ top: isMobile ? '50px' : undefined }}>\n        <Heading margin={'small'}>{option}</Heading>\n        <Content />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Admin;\n","import Axios from 'axios';\nimport { API_URL } from '../constants';\nimport { MailResponse } from '../types/response';\nimport authHeader from '../utils/authHeader';\n\nconst apiInstance = Axios.create({ baseURL: API_URL });\n\napiInstance.interceptors.request.use(async config => {\n  config.headers = config.headers || {};\n  const authorization = authHeader();\n  if (authorization) {\n    config.headers.authorization = authorization;\n  }\n  return config;\n});\n\nconst api = {\n  about: {\n    get: async (): Promise<string> => {\n      return (await apiInstance.get('/about')).data;\n    },\n    update: async (content: string): Promise<'OK'> => {\n      return (await apiInstance.post('/about', { content })).data;\n    },\n  },\n  chat: {\n    response: async (content: string): Promise<string> => {\n      return (await apiInstance.post('/chat', { content })).data;\n    },\n  },\n  mail: {\n    get: async (): Promise<MailResponse> => {\n      return (await apiInstance.get('/mails')).data;\n    },\n    send: async (\n      firstName: string,\n      lastName: string,\n      email: string,\n      message: string\n    ): Promise<'OK'> => {\n      return (\n        await apiInstance.post('/mails', {\n          firstName,\n          lastName,\n          email,\n          message,\n        })\n      ).data;\n    },\n  },\n  resume: {\n    get: async (): Promise<string> => {\n      return (await apiInstance.get('/resume')).data;\n    },\n    update: async (file: File): Promise<'OK'> => {\n      const formData = new FormData();\n      formData.append('resume', file);\n      return (await apiInstance.post('/resume', formData)).data;\n    },\n  },\n};\n\nexport default api;\n","import axios from 'axios';\nimport { API_URL, INVALID_TOKEN, VALID_TOKEN } from '../constants';\nimport authHeader from '../utils/authHeader';\n\nconst login = async (email, password) => {\n  const res = await axios.post(`${API_URL}/login`, { email, password });\n  if (res.data.accessToken) {\n    localStorage.setItem('user', JSON.stringify(res.data));\n  }\n  return res.data;\n};\n\nconst verifyToken = async () => {\n  try {\n    const res = await axios.post(`${API_URL}/verify`, null, {\n      headers: authHeader(),\n    });\n    if (res.data.userId === getCurrentUser().userId) {\n      return VALID_TOKEN;\n    } else {\n      return INVALID_TOKEN;\n    }\n  } catch (err) {\n    return INVALID_TOKEN;\n  }\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nconst checkAuth = async () => {\n  if (getCurrentUser()) {\n    try {\n      const value = await verifyToken();\n      return value;\n    } catch (error) {\n      return INVALID_TOKEN;\n    }\n  } else {\n    return INVALID_TOKEN;\n  }\n};\n\nexport { login, verifyToken, logout, getCurrentUser, checkAuth };\n","import { getCurrentUser } from '../services/auth';\n\nconst authHeader = () => {\n  const user = getCurrentUser();\n\n  if (user && user.accessToken) {\n    return { authorization: `Bearer ${user.accessToken}` };\n  } else {\n    return {};\n  }\n};\n\nexport default authHeader;\n"],"names":["INVALID_TOKEN","VALID_TOKEN","emailRegExp","API_URL","process","GITHUB_API","AdminMenuOption","MailMessage","firstName","lastName","email","message","isMobile","useMediaQuery","maxWidth","name","TableRow","TableCell","scope","border","useState","mail","setMail","mailLoading","setMailLoading","loadMail","api","response","mails","console","error","useEffect","Table","TableHeader","TableBody","map","value","index","option","Sidebar","responsive","width","round","corner","size","background","elevation","pad","left","right","top","header","Box","direction","gap","justify","align","wrap","Avatar","User","Text","textAlign","margin","vertical","footer","Button","plain","alignSelf","icon","Logout","style","padding","href","label","Nav","Article","onClick","e","ABOUT","MailOption","MAIL","Notes","RESUME","SettingsOption","SETTINGS","fill","Accordion","animate","zIndex","position","AccordionPanel","horizontal","height","selectedFile","setSelectedFile","FileInput","multiple","renderFile","file","onChange","target","files","alert","aboutSection","setAboutSection","loadAbout","TextArea","redirect","setRedirect","setOption","Content","Mail","validate","checkAuth","to","undefined","Heading","apiInstance","Axios","baseURL","interceptors","request","use","config","headers","authorization","authHeader","about","get","data","update","content","post","chat","send","resume","formData","FormData","append","login","password","axios","res","accessToken","localStorage","setItem","JSON","stringify","verifyToken","userId","getCurrentUser","logout","removeItem","parse","getItem","user"],"sourceRoot":""}