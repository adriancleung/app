{"version":3,"sources":["constants.js","services/auth.js","utils/authHeader.js","services/api.js","components/Admin/Mail.js","components/Admin/AdminSidebar.js","components/Admin/AdminAccordian.js","routes/Admin.js"],"names":["SUCCESS_CODE","INVALID_TOKEN","VALID_TOKEN","emailRegExp","API_URL","process","GITHUB_API","login","email","password","a","axios","post","res","data","accessToken","localStorage","setItem","JSON","stringify","verifyToken","headers","authHeader","userId","getCurrentUser","id","logout","removeItem","parse","getItem","checkAuth","then","value","user","sendMessage","firstName","lastName","message","getResume","get","getAllMail","getAboutContent","MailMessage","name","isMobile","useMediaQuery","maxWidth","TableRow","TableCell","scope","border","Mail","Table","TableHeader","TableBody","map","index","key","AdminSidebar","_props","Sidebar","responsive","width","round","corner","size","background","elevation","pad","left","right","top","header","Box","direction","gap","justify","align","wrap","Avatar","User","Text","textAlign","margin","vertical","footer","Button","plain","alignSelf","icon","Logout","style","padding","href","label","Nav","MailOption","SettingsOption","AdminAccordian","fill","Accordion","animate","zIndex","position","AccordionPanel","horizontal","height","Admin","useState","redirect","setRedirect","mail","setMail","mailLoading","setMailLoading","useEffect","mails","forEach","push","catch","err","console","error","finally","to","Heading"],"mappings":"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","file":"static/js/9.e3e1cf84.chunk.js","sourcesContent":["export const SUCCESS_CODE = 200;\nexport const UNAUTHORIZED = 401;\nexport const FORBIDDEN = 403;\nexport const SERVER_ERROR = 500;\n\nexport const INVALID_TOKEN = 'INVALID_TOKEN';\nexport const VALID_TOKEN = 'VALID_TOKEN';\n\nexport const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const API_URL = process.env.REACT_APP_API_URL;\nexport const GITHUB_API = 'https://api.github.com';\n","import axios from 'axios';\nimport { API_URL, INVALID_TOKEN, VALID_TOKEN } from '../constants';\nimport authHeader from '../utils/authHeader';\n\nconst login = async (email, password) => {\n  const res = await axios.post(`${API_URL}/auth/login`, { email, password });\n  if (res.data.accessToken) {\n    localStorage.setItem('user', JSON.stringify(res.data));\n  }\n  return res.data;\n};\n\nconst verifyToken = async () => {\n  try {\n    const res = await axios.post(`${API_URL}/auth/verify`, null, {\n      headers: authHeader(),\n    });\n    if (res.data.userId === getCurrentUser().id) {\n      return VALID_TOKEN;\n    } else {\n      return INVALID_TOKEN;\n    }\n  } catch (err) {\n    return INVALID_TOKEN;\n  }\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nconst checkAuth = () => {\n  if (getCurrentUser()) {\n    verifyToken().then(value => {\n      return value;\n    });\n  } else {\n    return INVALID_TOKEN;\n  }\n};\n\nexport { login, verifyToken, logout, getCurrentUser, checkAuth };\n","import { getCurrentUser } from '../services/auth';\n\nconst authHeader = () => {\n  const user = getCurrentUser();\n\n  if (user && user.accessToken) {\n    return { 'x-access-token': user.accessToken };\n  } else {\n    return {};\n  }\n};\n\nexport default authHeader;\n","import axios from 'axios';\nimport { API_URL } from '../constants';\nimport authHeader from '../utils/authHeader';\n\nexport const sendMessage = async (firstName, lastName, email, message) => {\n  try {\n    const res = await axios.post(`${API_URL}/mail`, {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      message: message,\n    });\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getResume = async () => {\n  try {\n    const res = await axios.get(`${API_URL}/resume`);\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getAllMail = async () => {\n  try {\n    const res = await axios.get(`${API_URL}/mail`, { headers: authHeader() });\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n\nexport const getAboutContent = async () => {\n  try {\n    const res = await axios.get(`${API_URL}/about`);\n    return res;\n  } catch (err) {\n    return err;\n  }\n};\n","import React from 'react';\nimport { Table, TableHeader, TableBody, TableRow, TableCell } from 'grommet';\nimport { useMediaQuery } from 'react-responsive';\n\nconst MailMessage = ({ name, email, message }) => {\n  const isMobile = useMediaQuery({ maxWidth: 1224 });\n  return (\n    <TableRow>\n      {isMobile ? (\n        <TableCell scope={'col'} border={'bottom'}>\n          {name} &lt;{email}&gt;\n          <br />\n          <br />\n          {message}\n        </TableCell>\n      ) : (\n        <>\n          <TableCell scope={'col'} border={'bottom'}>\n            {name}\n          </TableCell>\n          <TableCell scope={'col'} border={'bottom'}>\n            {email}\n          </TableCell>\n          <TableCell scope={'col'} border={'bottom'}>\n            {message}\n          </TableCell>\n        </>\n      )}\n    </TableRow>\n  );\n};\n\nconst Mail = ({ data }) => {\n  const isMobile = useMediaQuery({ maxWidth: 1224 });\n  return (\n    <Table>\n      <TableHeader>\n        <TableRow>\n          {isMobile ? (\n            <TableCell scope={'col'} border={'bottom'}>\n              <strong>Messages</strong>\n            </TableCell>\n          ) : (\n            <>\n              <TableCell scope={'col'} border={'bottom'}>\n                <strong>Name</strong>\n              </TableCell>\n              <TableCell scope={'col'} border={'bottom'}>\n                <strong>Email</strong>\n              </TableCell>\n              <TableCell scope={'col'} border={'bottom'}>\n                <strong>Message</strong>\n              </TableCell>\n            </>\n          )}\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.map((value, index) => {\n          return (\n            <MailMessage\n              key={index}\n              name={value.name}\n              email={value.email}\n              message={value.message}\n            />\n          );\n        })}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default Mail;\n","import React from 'react';\nimport { Sidebar, Box, Avatar, Text, Button, Nav } from 'grommet';\nimport { User, Logout, MailOption, SettingsOption } from 'grommet-icons';\n\nconst AdminSidebar = _props => {\n  return (\n    <Sidebar\n      responsive={false}\n      width={'300px'}\n      round={{ corner: 'right', size: 'small' }}\n      background={'#0984e3'}\n      elevation={'xlarge'}\n      pad={{ left: 'medium', right: 'large', top: 'medium' }}\n      header={\n        <Box\n          width={'100%'}\n          direction={'row'}\n          gap={'small'}\n          justify={'center'}\n          align={'center'}\n          wrap={true}>\n          <Avatar background={'#DADADA'} round={'full'}>\n            <User size={'medium'} />\n          </Avatar>\n          <Text textAlign={'center'} margin={{ vertical: 'small' }}>\n            Adrian Leung\n          </Text>\n        </Box>\n      }\n      footer={\n        <Button\n          plain\n          alignSelf={'start'}\n          icon={<Logout size={'medium'} style={{ padding: '10px' }} />}\n          href={'/logout'}\n          label={'Logout'}\n        />\n      }>\n      <Box width={'100%'}>\n        <Nav gap={'large'}>\n          <Box>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<MailOption />}\n              label={'Mail'}\n            />\n          </Box>\n          <Box>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<SettingsOption />}\n              label={'Settings'}\n            />\n          </Box>\n        </Nav>\n      </Box>\n    </Sidebar>\n  );\n};\n\nexport default AdminSidebar;","import React from 'react';\nimport { Accordion, AccordionPanel, Avatar, Box, Text, Button } from 'grommet';\nimport { User, MailOption, SettingsOption, Logout } from 'grommet-icons';\n\nconst AdminAccordian = _props => {\n  return (\n    <Box fill={'horizontal'}>\n      <Accordion\n        animate={true}\n        round={{ corner: 'bottom', size: 'medium' }}\n        style={{ zIndex: 0, position: 'fixed', width: '100%' }}>\n        <AccordionPanel label={'Admin'} background={'#0984e3'}>\n          <Box\n            pad={{ horizontal: 'medium' }}\n            background={'#0984e3'}\n            height={'xsmall'}\n            gap={'medium'}\n            direction={'row'}\n            justify={'start'}\n            align={'center'}\n            wrap={true}>\n            <Avatar background={'#DADADA'} round={'full'}>\n              <User size={'medium'} />\n            </Avatar>\n            <Text textAlign={'center'} margin={{ vertical: 'small' }}>\n              Adrian Leung\n            </Text>\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<MailOption />}\n              label={'Mail'}\n            />\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<SettingsOption />}\n              label={'Settings'}\n            />\n          </Box>\n          <Box\n            background={'#0984e3'}\n            height={'xxsmall'}\n            round={{ corner: 'bottom', size: 'medium' }}\n            pad={{ horizontal: 'medium' }}>\n            <Button\n              plain\n              alignSelf={'start'}\n              icon={<Logout size={'medium'} />}\n              href={'/logout'}\n              label={'Logout'}\n            />\n          </Box>\n        </AccordionPanel>\n      </Accordion>\n    </Box>\n  );\n};\n\nexport default AdminAccordian;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Heading } from 'grommet';\nimport { Redirect } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\nimport Mail from '../components/Admin/Mail';\nimport AdminSidebar from '../components/Admin/AdminSidebar';\nimport AdminAccordian from '../components/Admin/AdminAccordian';\nimport { checkAuth } from '../services/auth';\nimport { getAllMail } from '../services/api';\nimport { INVALID_TOKEN } from '../constants';\n\nconst Admin = _props => {\n  const [redirect, setRedirect] = useState(false);\n  const [mail, setMail] = useState([]);\n  const [mailLoading, setMailLoading] = useState(true);\n  const isMobile = useMediaQuery({ maxWidth: 1224 });\n\n  const loadMail = () => {\n    getAllMail()\n      .then(res => {\n        const mails = [];\n        res.data.mail.forEach(mail => {\n          mails.push({\n            name: `${mail.firstName} ${mail.lastName}`,\n            email: mail.email,\n            message: mail.message,\n          });\n        });\n        setMail(mails);\n      })\n      .catch(err => console.error(err))\n      .finally(() => setMailLoading(false));\n  };\n\n  useEffect(() => {\n    if (checkAuth() === INVALID_TOKEN) {\n      setRedirect(true);\n    } else {\n      loadMail();\n    }\n  }, []);\n\n  return redirect ? (\n    <Redirect to={'/login'} />\n  ) : (\n    <Box\n      width={'100vw'}\n      height={'100vh'}\n      gap={isMobile ? 'medium' : 'small'}\n      direction={isMobile ? 'column' : 'row'}>\n      {isMobile ? <AdminAccordian /> : <AdminSidebar />}\n\n      <Box\n        width={'100%'}\n        height={'100%'}\n        pad={'small'}\n        margin={{ top: isMobile ? '50px' : null }}>\n        <Heading margin={'small'}>Mail</Heading>\n        {!mailLoading && <Mail data={mail} />}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Admin;\n"],"sourceRoot":""}