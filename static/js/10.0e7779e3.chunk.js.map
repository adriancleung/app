{"version":3,"sources":["constants.js","services/auth.js","utils/authHeader.js","../node_modules/grommet-icons/es6/icons/UserAdmin.js","routes/Login.js"],"names":["SUCCESS_CODE","INVALID_TOKEN","VALID_TOKEN","emailRegExp","API_URL","process","GITHUB_API","login","email","password","a","axios","post","res","data","accessToken","localStorage","setItem","JSON","stringify","verifyToken","headers","authHeader","userId","getCurrentUser","id","logout","removeItem","parse","getItem","checkAuth","then","value","user","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","UserAdmin","props","React","createElement","StyledIcon","viewBox","a11yTitle","fill","stroke","strokeWidth","d","Login","_props","history","useHistory","useState","redirect","setRedirect","loginInfo","setLoginInfo","hideIncorrect","setHideIncorrect","useEffect","to","Box","width","height","background","justify","align","round","pad","gap","border","size","Text","Form","onSubmit","result","push","catch","onChange","FormField","name","placeholder","type","autoComplete","color","hidden","direction","Button","plain","label"],"mappings":"6HAAA,4MAAO,IAAMA,EAAe,IAKfC,EAAgB,gBAChBC,EAAc,cAEdC,EAAc,wJAEdC,EAAUC,8BACVC,EAAa,0B,4OCPpBC,EAAK,uCAAG,WAAOC,EAAOC,GAAd,eAAAC,EAAA,sEACMC,IAAMC,KAAN,UAAcR,IAAd,eAAoC,CAAEI,QAAOC,aADnD,cACNI,EADM,QAEJC,KAAKC,aACXC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAAIC,OAHtC,kBAKLD,EAAIC,MALC,2CAAH,wDAQLM,EAAW,uCAAG,sBAAAV,EAAA,+EAEEC,IAAMC,KAAN,UAAcR,IAAd,gBAAqC,KAAM,CAC3DiB,QAASC,gBAHK,iBAKRR,KAAKS,SAAWC,IAAiBC,GALzB,yCAMPvB,KANO,gCAQPD,KARO,kFAWTA,KAXS,0DAAH,qDAeXyB,EAAS,WACbV,aAAaW,WAAW,SAGpBH,EAAiB,WACrB,OAAON,KAAKU,MAAMZ,aAAaa,QAAQ,UAGnCC,EAAY,WAChB,IAAIN,IAKF,OAAOvB,IAJPmB,IAAcW,MAAK,SAAAC,GACjB,OAAOA,O,iCCtCb,aAYeV,IAVI,WACjB,IAAMW,EAAOT,cAEb,OAAIS,GAAQA,EAAKlB,YACR,CAAE,iBAAkBkB,EAAKlB,aAEzB,K,2HCRX,SAASmB,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAIzS,IAAIS,EAAY,SAAmBC,GACxC,OAAoBC,IAAMC,cAAcC,IAAYlB,EAAS,CAC3DmB,QAAS,YACTC,UAAW,aACVL,GAAqBC,IAAMC,cAAc,OAAQ,CAClDI,KAAM,OACNC,OAAQ,OACRC,YAAa,IACbC,EAAG,ya,yBC2EQC,UAhFD,SAAAC,GACZ,IAAMC,EAAUC,cADM,EAEUC,oBAAS,GAFnB,mBAEfC,EAFe,KAELC,EAFK,OAGYF,mBAAS,CAAEvD,MAAO,GAAIC,SAAU,KAH5C,mBAGfyD,EAHe,KAGJC,EAHI,OAIoBJ,oBAAS,GAJ7B,mBAIfK,EAJe,KAIAC,EAJA,KA0BtB,OANAC,qBAAU,WACJxC,gBAAgB5B,KAClB+D,GAAY,KAEb,IAEID,EACL,kBAAC,IAAD,CAAUO,GAAI,WAEd,kBAACC,EAAA,EAAD,CACEC,MAAO,QACPC,OAAQ,QACRC,WAAY,SACZC,QAAS,SACTC,MAAO,UACP,kBAACL,EAAA,EAAD,CACEC,MAAO,SACPC,OAAQ,SACRC,WAAY,QACZG,MAAO,SACPC,IAAK,QACLC,IAAK,SACLH,MAAO,SACPI,QAAQ,GACR,kBAAC,EAAD,CAAWC,KAAM,UACjB,kBAACC,EAAA,EAAD,iBACA,kBAACX,EAAA,EAAD,CAAKE,OAAQ,QACX,kBAACU,EAAA,EAAD,CACEpD,MAAOkC,EACPmB,SAAU,WA1ClB9E,YAAM2D,EAAU1D,MAAO0D,EAAUzD,UAC9BsB,MAAK,SAAAuD,GACuB,OAAvBA,EAAOvE,YACT8C,EAAQ0B,KAAK,UAEblB,GAAiB,MAGpBmB,OAAM,WACLnB,GAAiB,OAkCboB,SAAU,SAAAzD,GAAK,OAAImC,EAAanC,KAChC,kBAACwC,EAAA,EAAD,CAAKE,OAAQ,OAAQM,IAAK,UACxB,kBAACR,EAAA,EAAD,CAAKQ,IAAK,SACR,kBAACU,EAAA,EAAD,CACEC,KAAM,QACNC,YAAa,WACbC,KAAM,QACNC,aAAc,UAEhB,kBAACJ,EAAA,EAAD,CACEC,KAAM,WACNC,YAAa,WACbC,KAAM,WACNC,aAAc,cAGlB,kBAACX,EAAA,EAAD,CAAMY,MAAO,MAAOC,OAAQ5B,GAA5B,kCAGA,kBAACI,EAAA,EAAD,CAAKyB,UAAW,MAAOrB,QAAS,UAC9B,kBAACsB,EAAA,EAAD,CAAQC,OAAK,EAACC,MAAO,QAASP,KAAM","file":"static/js/10.0e7779e3.chunk.js","sourcesContent":["export const SUCCESS_CODE = 200;\nexport const UNAUTHORIZED = 401;\nexport const FORBIDDEN = 403;\nexport const SERVER_ERROR = 500;\n\nexport const INVALID_TOKEN = 'INVALID_TOKEN';\nexport const VALID_TOKEN = 'VALID_TOKEN';\n\nexport const emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const API_URL = process.env.REACT_APP_API_URL;\nexport const GITHUB_API = 'https://api.github.com';\n","import axios from 'axios';\nimport { API_URL, INVALID_TOKEN, VALID_TOKEN } from '../constants';\nimport authHeader from '../utils/authHeader';\n\nconst login = async (email, password) => {\n  const res = await axios.post(`${API_URL}/auth/login`, { email, password });\n  if (res.data.accessToken) {\n    localStorage.setItem('user', JSON.stringify(res.data));\n  }\n  return res.data;\n};\n\nconst verifyToken = async () => {\n  try {\n    const res = await axios.post(`${API_URL}/auth/verify`, null, {\n      headers: authHeader(),\n    });\n    if (res.data.userId === getCurrentUser().id) {\n      return VALID_TOKEN;\n    } else {\n      return INVALID_TOKEN;\n    }\n  } catch (err) {\n    return INVALID_TOKEN;\n  }\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nconst checkAuth = () => {\n  if (getCurrentUser()) {\n    verifyToken().then(value => {\n      return value;\n    });\n  } else {\n    return INVALID_TOKEN;\n  }\n};\n\nexport { login, verifyToken, logout, getCurrentUser, checkAuth };\n","import { getCurrentUser } from '../services/auth';\n\nconst authHeader = () => {\n  const user = getCurrentUser();\n\n  if (user && user.accessToken) {\n    return { 'x-access-token': user.accessToken };\n  } else {\n    return {};\n  }\n};\n\nexport default authHeader;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { StyledIcon } from '../StyledIcon';\nexport var UserAdmin = function UserAdmin(props) {\n  return /*#__PURE__*/React.createElement(StyledIcon, _extends({\n    viewBox: \"0 0 24 24\",\n    a11yTitle: \"UserAdmin\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeWidth: \"2\",\n    d: \"M8,11 C10.7614237,11 13,8.76142375 13,6 C13,3.23857625 10.7614237,1 8,1 C5.23857625,1 3,3.23857625 3,6 C3,8.76142375 5.23857625,11 8,11 Z M13.0233822,13.0234994 C11.7718684,11.7594056 10.0125018,11 8,11 C4,11 1,14 1,18 L1,23 L8,23 M10,19.5 C10,20.88 11.12,22 12.5,22 C13.881,22 15,20.88 15,19.5 C15,18.119 13.881,17 12.5,17 C11.12,17 10,18.119 10,19.5 L10,19.5 Z M23,15 L20,12 L14,18 M17.5,14.5 L20.5,17.5 L17.5,14.5 Z\"\n  }));\n};","import React, { useState, useEffect } from 'react';\nimport { Box, Text, Button, Form, FormField } from 'grommet';\nimport { UserAdmin } from 'grommet-icons';\nimport { login, checkAuth } from '../services/auth';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { VALID_TOKEN } from '../constants';\n\nconst Login = _props => {\n  const history = useHistory();\n  const [redirect, setRedirect] = useState(false);\n  const [loginInfo, setLoginInfo] = useState({ email: '', password: '' });\n  const [hideIncorrect, setHideIncorrect] = useState(true);\n\n  const handleLogin = () => {\n    login(loginInfo.email, loginInfo.password)\n      .then(result => {\n        if (result.accessToken !== null) {\n          history.push('/admin');\n        } else {\n          setHideIncorrect(false);\n        }\n      })\n      .catch(() => {\n        setHideIncorrect(false);\n      });\n  };\n\n  useEffect(() => {\n    if (checkAuth() === VALID_TOKEN) {\n      setRedirect(true);\n    }\n  }, []);\n\n  return redirect ? (\n    <Redirect to={'/admin'} />\n  ) : (\n    <Box\n      width={'100vw'}\n      height={'100vh'}\n      background={'dark-3'}\n      justify={'center'}\n      align={'center'}>\n      <Box\n        width={'medium'}\n        height={'medium'}\n        background={'white'}\n        round={'medium'}\n        pad={'small'}\n        gap={'medium'}\n        align={'center'}\n        border={true}>\n        <UserAdmin size={'large'} />\n        <Text>Welcome!</Text>\n        <Box height={'100%'}>\n          <Form\n            value={loginInfo}\n            onSubmit={() => handleLogin()}\n            onChange={value => setLoginInfo(value)}>\n            <Box height={'100%'} gap={'medium'}>\n              <Box gap={'small'}>\n                <FormField\n                  name={'email'}\n                  placeholder={'Username'}\n                  type={'email'}\n                  autoComplete={'email'}\n                />\n                <FormField\n                  name={'password'}\n                  placeholder={'Password'}\n                  type={'password'}\n                  autoComplete={'password'}\n                />\n              </Box>\n              <Text color={'red'} hidden={hideIncorrect}>\n                Incorrect username or password\n              </Text>\n              <Box direction={'row'} justify={'center'}>\n                <Button plain label={'Login'} type={'submit'} />\n              </Box>\n            </Box>\n          </Form>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Login;\n"],"sourceRoot":""}