{"version":3,"sources":["styles/Title.module.css","styles/Body.module.css","styles/App.module.css","styles/ModalContent.module.css","constants.js","components/ModalContent.js","components/Modal.js","views/Title.js","views/Body.js","App.js","serviceWorker.js","index.js","styles/Modal.module.css"],"names":["module","exports","socialMap","Map","set","document","documentElement","offsetHeight","scrollHeight","ModalContent","props","className","styles","ModalContentWrapper","ModalHeader","content","ModalBody","Modal","modalVisible","ModalShown","ModalHidden","ModalClose","style","color","fontSize","onClick","handleModal","Title","useState","setModalVisible","modalContent","setModalContent","offset","setOffset","handleClick","e","type","preventDefault","window","open","get","handleScroll","pageYOffset","useEffect","addEventListener","App","Hidden","Shown","transform","TitleText","SocialIcons","ModalLinksWrapper","ModalLinks","Body","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0feda81f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Title_App__1bGmV\",\"TitleText\":\"Title_TitleText__2YgqQ\",\"SocialIcons\":\"Title_SocialIcons__Kk-mQ\",\"ModalLinksWrapper\":\"Title_ModalLinksWrapper__2rZXS\",\"ModalLinks\":\"Title_ModalLinks__56tUr\",\"Shown\":\"Title_Shown__1KJgM\",\"Hidden\":\"Title_Hidden__pj7LH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Body\":\"Body_Body__KZhg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Shown\":\"App_Shown__2YHaF\",\"Hidden\":\"App_Hidden__ZPxLl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContentWrapper\":\"ModalContent_ModalContentWrapper__28KgE\",\"ModalHeader\":\"ModalContent_ModalHeader__Am_0W\",\"ModalBody\":\"ModalContent_ModalBody__qaQQK\"};","const socialMap = new Map();\nsocialMap.set('github', 'https://github.com/adriancleung');\nsocialMap.set('linkedin', 'https://linkedin.com/in/adriancleung');\nsocialMap.set('email', 'mailto:contact@adrianleung.dev');\n\nconst maxHeight = document.documentElement.offsetHeight;\nconst maxScrollHeight = document.documentElement.scrollHeight;\n\nexport {socialMap, maxHeight, maxScrollHeight};","import React from 'react';\nimport styles from '../styles/ModalContent.module.css';\n\nfunction ModalContent(props) {\n    return (\n      <div className={styles.ModalContentWrapper}>\n        <h1 className={styles.ModalHeader}>{props.content}</h1>\n        <p className={styles.ModalBody}>Hello!</p>\n        <br />\n        <p className={styles.ModalBody}>My name is Adrian Leung and welcome to my website! I am a 20 years old student at the Univerisity of Alberta pursuing a Bachelor's of Science degree. As a Computing Science Undergraduate, I am continuously being exposed to varieties of different programming languages and challenges. Since taking Computer Science 10 in high school, my passion to pursue a degree in the technological industry continues to grow.</p>\n        <br />\n        <p className={styles.ModalBody}>When I was a kid, I did not get the chance to grow up with technology. I would be playing around with my toy cars and figurines. My imagination was the source of my creativity. But one day, my dad comes home with a surprise. A surprise it was... My dad brought home a brand new gaming console! From that point, I fell in love with technology.</p>\n        <br />\n        <p className={styles.ModalBody}>Growing up without technology allowed me to realize that creativity does not start with convenience but convenience starts with creativity - this is the root of innovation, the root of thinking out of the box, and the root of finding solutions to problems. Now that I'm older, I hope that my ability to innovate, think out of the box, and to find solutions to problems can help others to reach their full potential!</p>\n        <br />\n        <p className={styles.ModalBody}>Although my academic studies take up a substantial amount of time in my life, I continue to push myself to explore different languages, library/frameworks, and development platforms. During my summer breaks, I continue to gain experience through employment opportunities in technological fields. I volunteer my extra hours to take care of kids, to provide my leadership skills in the community, and to provide my audio visual skills for different venues.</p>\n        <br />\n        <p className={styles.ModalBody}>I am currently looking for employment in software development for my academic internship. If interested, please take a look at my resume and email me at contact@adrianleung.dev.</p>\n      </div>\n    );\n}\n\nexport default ModalContent;","import React from \"react\";\nimport styles from \"../styles/Modal.module.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ModalContent from \"./ModalContent\";\n\nfunction Modal(props) {\n  return (\n    <div\n      className={`${styles.Modal} ${\n        props.modalVisible ? styles.ModalShown : styles.ModalHidden\n      }`}\n    >\n      <div className={styles.ModalClose}>\n        <CloseIcon\n          style={{ color: \"white\", fontSize: '4vw' }}\n          onClick={() => props.handleModal('')}\n        />\n      </div>\n      <ModalContent content={props.content} />\n    </div>\n  );\n}\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport styles from '../styles/Title.module.css';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport { socialMap } from '../constants';\nimport Modal from '../components/Modal';\n\nfunction Title() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n  const [offset, setOffset] = useState(0);\n\n  const handleClick = (e, type) => {\n    e.preventDefault();\n    window.open(socialMap.get(type), '_self');\n  };\n\n  const handleModal = (content) => {\n    setModalContent(content);\n    setModalVisible(!modalVisible);\n  };\n\n  const handleScroll = () => {\n    setOffset(window.pageYOffset);\n  }\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return (() => window.removeEventListener('scroll'), handleScroll);\n  });\n\n  return (\n    <>\n      <div className={styles.App}>\n        <Modal\n          modalVisible={modalVisible}\n          handleModal={handleModal}\n          content={modalContent}\n        />\n        <div className={modalVisible ? styles.Hidden : styles.Shown}\n          style={{ transform: `translateY(${offset}px)`}}>\n          <div>\n            <h1 className={`${styles.TitleText} ${modalVisible ? styles.Hidden : styles.Shown}`}>Adrian Leung</h1>\n            <div className={`${modalVisible ? styles.Hidden : styles.Shown}`}>\n              <GitHubIcon\n                className={styles.SocialIcons}\n                style={{ color: 'white', fontSize: '4vw' }}\n                onClick={(e) => handleClick(e, 'github')}\n              />\n              <LinkedInIcon\n                className={styles.SocialIcons}\n                style={{ color: 'white', fontSize: '4vw' }}\n                onClick={(e) => handleClick(e, 'linkedin')}\n              />\n              <MailOutlineIcon\n                className={styles.SocialIcons}\n                style={{ color: 'white', fontSize: '4vw' }}\n                onClick={(e) => handleClick(e, 'email')}\n              />\n            </div>\n          </div>\n          <div\n            className={`${styles.ModalLinksWrapper} ${modalVisible ? styles.Hidden : styles.Shown\n              }`}\n          >\n            <p\n              className={styles.ModalLinks}\n              onClick={() => handleModal('Contact')}\n            >\n              Contact\n            </p>\n            <p\n              className={styles.ModalLinks}\n              onClick={() => handleModal('About me')}\n            >\n              About me\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Title;\n","import React from 'react';\nimport styles from '../styles/Body.module.css';\n\nfunction Body() {\n    return (\n        <>\n        <div className={styles.Body}>\n\n        </div>\n        </>\n    )\n}\n\nexport default Body;","import React from 'react';\nimport Title from './views/Title';\nimport Body from './views/Body';\n// eslint-disable-next-line no-unused-vars\nimport {App as DefaultStyle} from './styles/App.module.css';\n\nfunction App() {\n  return (\n    <>\n      <Title />\n      <Body />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2n1j9\",\"ModalClose\":\"Modal_ModalClose___T4mG\",\"ModalShown\":\"Modal_ModalShown__5kthc\",\"ModalHidden\":\"Modal_ModalHidden__1ZETD\"};"],"sourceRoot":""}