{"version":3,"sources":["styles/SocialLinks.module.css","components/SocialLinks.js","components/AboutContent.js","components/ModalLinks.js","components/Intro.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SocialLinks","props","Box","direction","gap","Button","href","className","styles","ZoomOnHover","style","fontSize","AboutContent","overflow","Text","textAlign","margin","Anchor","color","weight","ModalLinks","useState","showAbout","setShowAbout","showContact","setShowContact","justify","label","toUpperCase","onClick","Layer","onEsc","onClickOutside","width","pad","bottom","animation","type","duration","height","alignSelf","Close","size","Intro","Heading","theme","global","font","family","focus","border","button","default","App","handleWindowSizeChange","vh","window","innerHeight","document","documentElement","setProperty","useEffect","addEventListener","removeEventListener","Grommet","background","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,YAAc,mC,+PC+BjBC,EAzBK,SAAAC,GAClB,OACE,kBAACC,EAAA,EAAD,CAAKC,UAAW,MAAOC,IAAK,UAC1B,kBAACC,EAAA,EAAD,CAAQC,KAAM,mCACZ,kBAAC,IAAD,CACEC,UAAWC,IAAOC,YAClBC,MAAO,CAAEC,SAAU,WAGvB,kBAACN,EAAA,EAAD,CAAQC,KAAM,wCACZ,kBAAC,IAAD,CACEC,UAAWC,IAAOC,YAClBC,MAAO,CAAEC,SAAU,WAGvB,kBAACN,EAAA,EAAD,CAAQC,KAAM,kCACZ,kBAAC,IAAD,CACEC,UAAWC,IAAOC,YAClBC,MAAO,CAAEC,SAAU,a,yCC4BdC,EAlDM,SAAAX,GACnB,OACE,kBAACC,EAAA,EAAD,CAAKW,SAAU,UACb,kBAACC,EAAA,EAAD,CAAMJ,MAAO,CAACK,UAAW,WAAYC,OAAQ,UAA7C,SAEE,6BACA,6BAHF,8ZAUE,6BACA,6BAXF,yVAiBE,6BACA,6BAlBF,kaAyBE,6BACA,6BA1BF,ycAkCE,6BACA,6BAnCF,2JAqCkB,IAChB,kBAACC,EAAA,EAAD,CAAQX,KAAM,iCAAkCY,MAAO,QAASC,OAAQ,QAAxE,2BAtCF,OCyDSC,EA1DI,SAAAnB,GAAU,IAAD,EACQoB,oBAAS,GADjB,mBACnBC,EADmB,KACRC,EADQ,OAEYF,oBAAS,GAFrB,mBAEnBG,EAFmB,KAENC,EAFM,KAG1B,OACE,oCACE,kBAACvB,EAAA,EAAD,CAAKC,UAAW,MAAOuB,QAAS,UAC9B,kBAACrB,EAAA,EAAD,CACEsB,MAAO,QAAQC,cACfC,QAAS,kBAAMN,GAAcD,MAE/B,kBAACjB,EAAA,EAAD,CACEsB,MAAO,UAAUC,cACjBC,QAAS,kBAAMJ,GAAgBD,OAGlCF,GACC,kBAACQ,EAAA,EAAD,CACEC,MAAO,kBAAMR,GAAa,IAC1BS,eAAgB,kBAAMT,GAAa,KACnC,kBAACrB,EAAA,EAAD,CACE+B,MAAO,SACPC,IAAK,CAACC,OAAQ,QACdC,UAAW,CAAEC,KAAM,SAAUC,SAAU,MACvC,kBAACpC,EAAA,EAAD,CAAKqC,OAAQ,UACX,kBAAClC,EAAA,EAAD,CACEwB,QAAS,kBAAMN,GAAa,IAC5BiB,UAAW,MACXxB,OAAQ,SACR,kBAACyB,EAAA,EAAD,CAAOC,KAAM,aAGjB,kBAAC,EAAD,QAILlB,GACC,kBAACM,EAAA,EAAD,CACEC,MAAO,kBAAMN,GAAe,IAC5BO,eAAgB,kBAAMP,GAAe,KACrC,kBAACvB,EAAA,EAAD,CACE+B,MAAO,SACPC,IAAK,CAACC,OAAQ,QACdC,UAAW,CAAEC,KAAM,SAAUC,SAAU,MACvC,kBAACpC,EAAA,EAAD,CAAKqC,OAAQ,SACX,kBAAClC,EAAA,EAAD,CACEwB,QAAS,kBAAMJ,GAAe,IAC9Be,UAAW,MACXxB,OAAQ,SACR,kBAACyB,EAAA,EAAD,CAAOC,KAAM,iBCtCdC,EAVD,SAAA1C,GACZ,OACE,kBAACC,EAAA,EAAD,CAAKc,OAAQ,QAASZ,IAAK,SAAUgC,UAAW,CAACC,KAAM,SAAUC,SAAU,MACzE,kBAACM,EAAA,EAAD,CAASF,KAAM,SAAS1B,OAAQ,CAACmB,OAAQ,WAAzC,gBACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,QCLAU,G,MAAQ,CACZC,OAAQ,CACNC,KAAM,CACJC,OAAQ,SACRN,KAAM,OACNH,OAAQ,QAEVU,MAAO,CACLC,OAAQ,CACNhC,MAAO,iBAIbiC,OAAQ,CACNC,QAAS,CACPF,OAAQ,CACNhC,MAAO,SAETA,MAAO,YAgCEmC,EA3BH,SAAApD,GACV,IAAMqD,EAAyB,WAC7B,IAAIC,EAA0B,IAArBC,OAAOC,YAChBC,SAASC,gBAAgBjD,MAAMkD,YAAY,OAA3C,UAAsDL,EAAtD,QASF,OANAM,qBAAU,WAGR,OAFAP,IACAE,OAAOM,iBAAiB,SAAUR,GAC3B,kBAAME,OAAOO,oBAAoB,SAAUT,OAIlD,kBAACU,EAAA,EAAD,CAASnB,MAAOA,GACd,kBAAC3C,EAAA,EAAD,CACEC,UAAW,SACXuB,QAAS,SACTQ,IAAK,SACL+B,WAAY,QACZ1B,OAAQ,6BACRN,MAAO,SACP,kBAAC,EAAD,SCrCFiC,EAAcC,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC1FjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASoC,eAAe,SDYnB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,OAAwBxC,OAAOY,SAAS9D,MACpD2F,SAAWzC,OAAOY,SAAS6B,OAIvC,OAGFzC,OAAOM,iBAAiB,QAAQ,WAC9B,IAAMU,EAAK,UAAMwB,OAAN,sBAEP9B,IAgEV,SAAiCM,EAAOC,GAEtCyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BtB,MAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,MAAK,WAC7BrB,OAAOY,SAASuC,eAKpBpC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAsB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCrC/BE,K","file":"static/js/main.33dacc36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ZoomOnHover\":\"SocialLinks_ZoomOnHover__2fejp\"};","import React from 'react';\nimport { Box, Button } from 'grommet';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport styles from '../styles/SocialLinks.module.css';\n\nconst SocialLinks = props => {\n  return (\n    <Box direction={'row'} gap={'medium'}>\n      <Button href={'https://github.com/adriancleung'}>\n        <GitHubIcon\n          className={styles.ZoomOnHover}\n          style={{ fontSize: '48px' }}\n        />\n      </Button>\n      <Button href={'https://linkedin.com/in/adriancleung'}>\n        <LinkedInIcon\n          className={styles.ZoomOnHover}\n          style={{ fontSize: '48px' }}\n        />\n      </Button>\n      <Button href={'mailto:contact@adrianleung.dev'}>\n        <MailOutlineIcon\n          className={styles.ZoomOnHover}\n          style={{ fontSize: '48px' }}\n        />\n      </Button>\n    </Box>\n  );\n};\n\nexport default SocialLinks;","import React from 'react';\nimport { Anchor, Box, Text } from 'grommet';\n\nconst AboutContent = props => {\n  return (\n    <Box overflow={'scroll'}>\n      <Text style={{textAlign: 'justify'}} margin={'medium'}>\n        Hello!\n        <br />\n        <br />\n        My name is Adrian Leung and welcome to my website! I am a 20 years old\n        student at the Univerisity of Alberta pursuing a Bachelor's of Science\n        degree. As a Computing Science Undergraduate, I am continuously being\n        exposed to varieties of different programming languages and challenges.\n        Since taking Computer Science 10 in high school, my passion to pursue a\n        degree in the technological industry continues to grow.\n        <br />\n        <br />\n        When I was a kid, I did not get the chance to grow up with technology. I\n        would be playing around with my toy cars and figurines. My imagination\n        was the source of my creativity. But one day, my dad comes home with a\n        surprise. A surprise it was... My dad brought home a brand new gaming\n        console! From that point, I fell in love with technology.\n        <br />\n        <br />\n        Growing up without technology allowed me to realize that creativity does\n        not start with convenience but convenience starts with creativity - this\n        is the root of innovation, the root of thinking out of the box, and the\n        root of finding solutions to problems. Now that I'm older, I hope that\n        my ability to innovate, think out of the box, and to find solutions to\n        problems can help others to reach their full potential!\n        <br />\n        <br />\n        Although my academic studies take up a substantial amount of time in my\n        life, I continue to push myself to explore different languages,\n        library/frameworks, and development platforms. During my summer breaks,\n        I continue to gain experience through employment opportunities in\n        technological fields. I volunteer my extra hours to take care of kids,\n        to provide my leadership skills in the community, and to provide my\n        audio visual skills for different venues.\n        <br />\n        <br />I am currently looking for employment in software development for\n        my academic internship. If interested, please take a look at my resume\n        and email me at{' '}\n        <Anchor href={'mailto:contact@adrianleung.dev'} color={'white'} weight={'bold'}>\n          contact@adrianleung.dev\n        </Anchor>\n        .\n      </Text>\n    </Box>\n  );\n};\n\nexport default AboutContent;\n","import React, { useState } from 'react';\nimport { Box, Button, Layer } from 'grommet';\nimport { Close } from 'grommet-icons';\nimport AboutContent from './AboutContent';\n\nconst ModalLinks = props => {\n  const [showAbout, setShowAbout] = useState(false);\n  const [showContact, setShowContact] = useState(false);\n  return (\n    <>\n      <Box direction={'row'} justify={'evenly'}>\n        <Button\n          label={'About'.toUpperCase()}\n          onClick={() => setShowAbout(!showAbout)}\n        />\n        <Button\n          label={'Contact'.toUpperCase()}\n          onClick={() => setShowContact(!showContact)}\n        />\n      </Box>\n      {showAbout && (\n        <Layer\n          onEsc={() => setShowAbout(false)}\n          onClickOutside={() => setShowAbout(false)}>\n          <Box\n            width={'xlarge'}\n            pad={{bottom: '10vh'}}\n            animation={{ type: 'fadeIn', duration: 1000 }}>\n            <Box height={'xsmall'}>\n              <Button\n                onClick={() => setShowAbout(false)}\n                alignSelf={'end'}\n                margin={'small'}>\n                <Close size={'medium'} />\n              </Button>\n            </Box>\n            <AboutContent />\n          </Box>\n        </Layer>\n      )}\n      {showContact && (\n        <Layer\n          onEsc={() => setShowContact(false)}\n          onClickOutside={() => setShowContact(false)}>\n          <Box\n            width={'xlarge'}\n            pad={{bottom: '10vh'}}\n            animation={{ type: 'fadeIn', duration: 1000 }}>\n            <Box height={'small'}>\n              <Button\n                onClick={() => setShowContact(false)}\n                alignSelf={'end'}\n                margin={'small'}>\n                <Close size={'medium'} />\n              </Button>\n            </Box>\n          </Box>\n        </Layer>\n      )}\n    </>\n  );\n};\n\nexport default ModalLinks;\n","import React from 'react';\nimport { Box, Heading } from 'grommet';\nimport SocialLinks from './SocialLinks';\nimport ModalLinks from './ModalLinks';\n\nconst Intro = props => {\n  return (\n    <Box margin={'large'} gap={'medium'} animation={{type: 'fadeIn', duration: 2000}}>\n      <Heading size={'xlarge'}margin={{bottom: 'xsmall'}}>Adrian Leung</Heading>\n      <SocialLinks />\n      <ModalLinks />\n    </Box>\n  )\n};\n\nexport default Intro;","import React, { useEffect } from 'react';\nimport Intro from './components/Intro';\nimport { Grommet, Box } from 'grommet';\nimport './styles/App.module.css';\n\nconst theme = {\n  global: {\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n    focus: {\n      border: {\n        color: 'transparent',\n      },\n    },\n  },\n  button: {\n    default: {\n      border: {\n        color: 'white',\n      },\n      color: 'white',\n    },\n  },\n};\n\nconst App = props => {\n  const handleWindowSizeChange = () => {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  };\n\n  useEffect(() => {\n    handleWindowSizeChange();\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => window.removeEventListener('resize', handleWindowSizeChange);\n  });\n\n  return (\n    <Grommet theme={theme}>\n      <Box\n        direction={'column'}\n        justify={'center'}\n        pad={'medium'}\n        background={'black'}\n        height={'calc(var(--vh, 1vh) * 100)'}\n        width={'100vw'}>\n        <Intro />\n      </Box>\n    </Grommet>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}