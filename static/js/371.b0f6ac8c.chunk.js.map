{"version":3,"file":"static/js/371.b0f6ac8c.chunk.js","mappings":"yPAAO,IAKMA,EAAgB,gBAChBC,EAAc,cAEdC,EACX,wJAEWC,EAAUC,8BACVC,EAAa,0B,sECE1B,UARgC,WAK9B,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,QACC,KAEI,SAAC,KAAD,CAAUC,GAAI,a,4LCPjBC,EAAK,yCAAG,WAAOC,EAAOC,GAAd,4FACMC,IAAAA,KAAA,UAAcT,EAAAA,GAAd,UAA+B,CAAEO,MAAAA,EAAOC,SAAAA,IAD9C,cACNE,EADM,QAEJC,KAAKC,aACXC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUN,EAAIC,OAHtC,kBAKLD,EAAIC,MALC,2CAAH,wDAQLM,EAAW,yCAAG,4GAEER,IAAAA,KAAA,UAAcT,EAAAA,GAAd,WAAgC,KAAM,CACtDkB,SAASC,EAAAA,EAAAA,OAHK,iBAKRR,KAAKS,SAAWC,IAAiBD,OALzB,yCAMPtB,EAAAA,GANO,gCAQPD,EAAAA,IARO,kFAWTA,EAAAA,IAXS,0DAAH,qDAeXO,EAAS,WACbS,aAAaS,WAAW,SAGpBD,EAAiB,WACrB,OAAON,KAAKQ,MAAMV,aAAaW,QAAQ,UAGnCC,EAAS,yCAAG,6FACZJ,IADY,0CAGQJ,IAHR,cAGNS,EAHM,yBAILA,GAJK,yDAML7B,EAAAA,IANK,yDASPA,EAAAA,IATO,yDAAH,sD,kCCvBf,IAVmB,WACjB,IAAM8B,GAAON,EAAAA,EAAAA,MAEb,OAAIM,GAAQA,EAAKf,YACR,CAAEgB,cAAc,UAAD,OAAYD,EAAKf,cAEhC","sources":["constants.ts","routes/Logout.tsx","services/auth.js","utils/authHeader.ts"],"sourcesContent":["export const SUCCESS_CODE = 200;\nexport const UNAUTHORIZED = 401;\nexport const FORBIDDEN = 403;\nexport const SERVER_ERROR = 500;\n\nexport const INVALID_TOKEN = 'INVALID_TOKEN';\nexport const VALID_TOKEN = 'VALID_TOKEN';\n\nexport const emailRegExp =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const API_URL = process.env.REACT_APP_API_URL;\nexport const GITHUB_API = 'https://api.github.com';\n","import React, { useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { logout } from '../services/auth';\n\ntype Props = {};\n\nconst Logout: React.FC<Props> = () => {\n  useEffect(() => {\n    logout();\n  }, []);\n\n  return <Navigate to={'/login'} />;\n};\n\nexport default Logout;\n","import axios from 'axios';\nimport { API_URL, INVALID_TOKEN, VALID_TOKEN } from '../constants';\nimport authHeader from '../utils/authHeader';\n\nconst login = async (email, password) => {\n  const res = await axios.post(`${API_URL}/login`, { email, password });\n  if (res.data.accessToken) {\n    localStorage.setItem('user', JSON.stringify(res.data));\n  }\n  return res.data;\n};\n\nconst verifyToken = async () => {\n  try {\n    const res = await axios.post(`${API_URL}/verify`, null, {\n      headers: authHeader(),\n    });\n    if (res.data.userId === getCurrentUser().userId) {\n      return VALID_TOKEN;\n    } else {\n      return INVALID_TOKEN;\n    }\n  } catch (err) {\n    return INVALID_TOKEN;\n  }\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('user'));\n};\n\nconst checkAuth = async () => {\n  if (getCurrentUser()) {\n    try {\n      const value = await verifyToken();\n      return value;\n    } catch (error) {\n      return INVALID_TOKEN;\n    }\n  } else {\n    return INVALID_TOKEN;\n  }\n};\n\nexport { login, verifyToken, logout, getCurrentUser, checkAuth };\n","import { getCurrentUser } from '../services/auth';\n\nconst authHeader = () => {\n  const user = getCurrentUser();\n\n  if (user && user.accessToken) {\n    return { authorization: `Bearer ${user.accessToken}` };\n  } else {\n    return {};\n  }\n};\n\nexport default authHeader;\n"],"names":["INVALID_TOKEN","VALID_TOKEN","emailRegExp","API_URL","process","GITHUB_API","useEffect","logout","to","login","email","password","axios","res","data","accessToken","localStorage","setItem","JSON","stringify","verifyToken","headers","authHeader","userId","getCurrentUser","removeItem","parse","getItem","checkAuth","value","user","authorization"],"sourceRoot":""}